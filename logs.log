2024-04-15 23:37:31,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 23:37:31,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 23:37:31,649:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 23:37:31,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-15 23:38:12,946:INFO:PyCaret RegressionExperiment
2024-04-15 23:38:12,946:INFO:Logging name: reg-default-name
2024-04-15 23:38:12,947:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-15 23:38:12,948:INFO:version 3.3.0
2024-04-15 23:38:12,948:INFO:Initializing setup()
2024-04-15 23:38:12,948:INFO:self.USI: 855c
2024-04-15 23:38:12,948:INFO:self._variable_keys: {'gpu_param', 'y_test', 'memory', 'exp_id', '_available_plots', 'logging_param', 'USI', 'X', 'pipeline', 'fold_generator', 'y', 'transform_target_param', 'idx', 'X_test', 'fold_shuffle_param', 'exp_name_log', 'data', '_ml_usecase', 'html_param', 'target_param', 'y_train', 'log_plots_param', 'fold_groups_param', 'n_jobs_param', 'seed', 'gpu_n_jobs_param', 'X_train'}
2024-04-15 23:38:12,948:INFO:Checking environment
2024-04-15 23:38:12,949:INFO:python_version: 3.11.5
2024-04-15 23:38:12,949:INFO:python_build: ('main', 'Sep 11 2023 13:26:23')
2024-04-15 23:38:12,949:INFO:machine: AMD64
2024-04-15 23:38:12,949:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-15 23:38:12,949:INFO:Memory: svmem(total=8478838784, available=1298968576, percent=84.7, used=7179870208, free=1298968576)
2024-04-15 23:38:12,949:INFO:Physical Core: 4
2024-04-15 23:38:12,949:INFO:Logical Core: 8
2024-04-15 23:38:12,949:INFO:Checking libraries
2024-04-15 23:38:12,949:INFO:System:
2024-04-15 23:38:12,951:INFO:    python: 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]
2024-04-15 23:38:12,951:INFO:executable: C:\Users\Thabang Ndhlovu\conda\python.exe
2024-04-15 23:38:12,951:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-15 23:38:12,951:INFO:PyCaret required dependencies:
2024-04-15 23:38:15,456:INFO:                 pip: 23.2.1
2024-04-15 23:38:15,456:INFO:          setuptools: 69.0.2
2024-04-15 23:38:15,456:INFO:             pycaret: 3.2.0
2024-04-15 23:38:15,456:INFO:             IPython: 8.15.0
2024-04-15 23:38:15,456:INFO:          ipywidgets: 8.1.1
2024-04-15 23:38:15,456:INFO:                tqdm: 4.65.0
2024-04-15 23:38:15,456:INFO:               numpy: 1.24.3
2024-04-15 23:38:15,456:INFO:              pandas: 2.1.4
2024-04-15 23:38:15,457:INFO:              jinja2: 3.1.2
2024-04-15 23:38:15,457:INFO:               scipy: 1.10.1
2024-04-15 23:38:15,457:INFO:              joblib: 1.3.2
2024-04-15 23:38:15,457:INFO:             sklearn: 1.4.1.post1
2024-04-15 23:38:15,457:INFO:                pyod: 1.1.1
2024-04-15 23:38:15,457:INFO:            imblearn: 0.10.1
2024-04-15 23:38:15,457:INFO:   category_encoders: 2.6.3
2024-04-15 23:38:15,457:INFO:            lightgbm: 4.1.0
2024-04-15 23:38:15,457:INFO:               numba: 0.57.1
2024-04-15 23:38:15,457:INFO:            requests: 2.31.0
2024-04-15 23:38:15,457:INFO:          matplotlib: 3.6.0
2024-04-15 23:38:15,458:INFO:          scikitplot: 0.3.7
2024-04-15 23:38:15,458:INFO:         yellowbrick: 1.5
2024-04-15 23:38:15,458:INFO:              plotly: 5.18.0
2024-04-15 23:38:15,458:INFO:    plotly-resampler: Not installed
2024-04-15 23:38:15,458:INFO:             kaleido: 0.2.1
2024-04-15 23:38:15,458:INFO:           schemdraw: 0.15
2024-04-15 23:38:15,458:INFO:         statsmodels: 0.14.0
2024-04-15 23:38:15,458:INFO:              sktime: 0.21.1
2024-04-15 23:38:15,458:INFO:               tbats: 1.1.3
2024-04-15 23:38:15,458:INFO:            pmdarima: 2.0.4
2024-04-15 23:38:15,459:INFO:              psutil: 5.9.0
2024-04-15 23:38:15,459:INFO:          markupsafe: 2.1.1
2024-04-15 23:38:15,459:INFO:             pickle5: Not installed
2024-04-15 23:38:15,459:INFO:         cloudpickle: 2.2.1
2024-04-15 23:38:15,459:INFO:         deprecation: 2.1.0
2024-04-15 23:38:15,459:INFO:              xxhash: 2.0.2
2024-04-15 23:38:15,459:INFO:           wurlitzer: Not installed
2024-04-15 23:38:15,459:INFO:PyCaret optional dependencies:
2024-04-15 23:38:28,835:INFO:                shap: 0.43.0
2024-04-15 23:38:28,835:INFO:           interpret: Not installed
2024-04-15 23:38:28,835:INFO:                umap: 0.5.4
2024-04-15 23:38:28,835:INFO:     ydata_profiling: Not installed
2024-04-15 23:38:28,836:INFO:  explainerdashboard: Not installed
2024-04-15 23:38:28,836:INFO:             autoviz: Not installed
2024-04-15 23:38:28,836:INFO:           fairlearn: Not installed
2024-04-15 23:38:28,836:INFO:          deepchecks: Not installed
2024-04-15 23:38:28,836:INFO:             xgboost: 2.0.1
2024-04-15 23:38:28,836:INFO:            catboost: 1.2.2
2024-04-15 23:38:28,836:INFO:              kmodes: Not installed
2024-04-15 23:38:28,836:INFO:             mlxtend: 0.23.0
2024-04-15 23:38:28,836:INFO:       statsforecast: Not installed
2024-04-15 23:38:28,836:INFO:        tune_sklearn: Not installed
2024-04-15 23:38:28,837:INFO:                 ray: Not installed
2024-04-15 23:38:28,837:INFO:            hyperopt: 0.2.7
2024-04-15 23:38:28,837:INFO:              optuna: 3.2.0
2024-04-15 23:38:28,837:INFO:               skopt: Not installed
2024-04-15 23:38:28,837:INFO:              mlflow: 2.9.2
2024-04-15 23:38:28,837:INFO:              gradio: 4.4.1
2024-04-15 23:38:28,837:INFO:             fastapi: 0.110.0
2024-04-15 23:38:28,837:INFO:             uvicorn: 0.24.0.post1
2024-04-15 23:38:28,837:INFO:              m2cgen: Not installed
2024-04-15 23:38:28,837:INFO:           evidently: Not installed
2024-04-15 23:38:28,838:INFO:               fugue: Not installed
2024-04-15 23:38:28,838:INFO:           streamlit: 1.28.0
2024-04-15 23:38:28,838:INFO:             prophet: 1.1.5
2024-04-15 23:38:28,838:INFO:None
2024-04-15 23:38:28,838:INFO:Set up data.
2024-04-15 23:38:28,856:INFO:Set up folding strategy.
2024-04-15 23:38:28,857:INFO:Set up train/test split.
2024-04-15 23:38:28,868:INFO:Set up index.
2024-04-15 23:38:28,869:INFO:Assigning column types.
2024-04-15 23:38:28,881:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-15 23:38:28,881:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 23:38:28,890:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 23:38:28,898:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:28,994:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:29,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:29,066:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:29,074:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:30,857:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-15 23:38:30,869:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 23:38:30,879:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,001:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,102:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:31,108:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:31,110:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-15 23:38:31,119:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,144:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,279:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,352:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,353:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:31,356:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:31,364:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,370:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,459:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,560:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:31,570:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:31,572:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-15 23:38:31,596:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,791:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:31,796:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:31,818:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,913:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:31,985:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:31,989:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:31,991:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-15 23:38:32,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:32,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:32,211:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:32,216:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:32,365:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:32,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-15 23:38:32,480:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:32,489:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:32,490:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-15 23:38:32,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:32,828:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:32,842:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:32,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-15 23:38:33,051:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:33,056:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:33,057:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-15 23:38:33,267:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:33,271:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:33,469:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:33,473:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:33,501:INFO:Finished creating preprocessing pipeline.
2024-04-15 23:38:33,501:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\THABAN~1\AppData\Local\Temp\joblib),
         steps=[('placeholder', None)])
2024-04-15 23:38:33,501:INFO:Creating final display dataframe.
2024-04-15 23:38:33,596:INFO:Setup _display_container:                    Description           Value
0                   Session id            5948
1                       Target  numeric_rating
2                  Target type      Regression
3          Original data shape        (42, 27)
4       Transformed data shape        (42, 27)
5  Transformed train set shape        (29, 27)
6   Transformed test set shape        (13, 27)
7             Numeric features              26
8     Rows with missing values            9.5%
2024-04-15 23:38:33,782:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:33,787:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:33,957:INFO:Soft dependency imported: xgboost: 2.0.1
2024-04-15 23:38:33,960:INFO:Soft dependency imported: catboost: 1.2.2
2024-04-15 23:38:33,973:INFO:setup() successfully completed in 22.86s...............
2024-04-15 23:39:11,801:INFO:Initializing compare_models()
2024-04-15 23:39:11,801:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-04-15 23:39:11,801:INFO:Checking exceptions
2024-04-15 23:39:11,805:INFO:Preparing display monitor
2024-04-15 23:39:11,846:INFO:Initializing Linear Regression
2024-04-15 23:39:11,846:INFO:Total runtime is 0.0 minutes
2024-04-15 23:39:11,853:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:11,855:INFO:Initializing create_model()
2024-04-15 23:39:11,856:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:11,856:INFO:Checking exceptions
2024-04-15 23:39:11,856:INFO:Importing libraries
2024-04-15 23:39:11,856:INFO:Copying training dataset
2024-04-15 23:39:11,872:INFO:Defining folds
2024-04-15 23:39:11,872:INFO:Declaring metric variables
2024-04-15 23:39:11,878:INFO:Importing untrained model
2024-04-15 23:39:11,882:INFO:Linear Regression Imported successfully
2024-04-15 23:39:11,896:INFO:Starting cross validation
2024-04-15 23:39:11,913:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:38,467:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:38,543:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_base.py", line 578, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:38,545:INFO:Initializing create_model()
2024-04-15 23:39:38,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:38,545:INFO:Checking exceptions
2024-04-15 23:39:38,545:INFO:Importing libraries
2024-04-15 23:39:38,545:INFO:Copying training dataset
2024-04-15 23:39:38,561:INFO:Defining folds
2024-04-15 23:39:38,562:INFO:Declaring metric variables
2024-04-15 23:39:38,569:INFO:Importing untrained model
2024-04-15 23:39:38,580:INFO:Linear Regression Imported successfully
2024-04-15 23:39:38,596:INFO:Starting cross validation
2024-04-15 23:39:38,598:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:38,754:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-15 23:39:38,779:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_base.py", line 578, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_base.py", line 578, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LinearRegression does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:38,782:INFO:Initializing Lasso Regression
2024-04-15 23:39:38,782:INFO:Total runtime is 0.44893250465393064 minutes
2024-04-15 23:39:38,791:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:38,792:INFO:Initializing create_model()
2024-04-15 23:39:38,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:38,793:INFO:Checking exceptions
2024-04-15 23:39:38,793:INFO:Importing libraries
2024-04-15 23:39:38,794:INFO:Copying training dataset
2024-04-15 23:39:38,814:INFO:Defining folds
2024-04-15 23:39:38,814:INFO:Declaring metric variables
2024-04-15 23:39:38,823:INFO:Importing untrained model
2024-04-15 23:39:38,833:INFO:Lasso Regression Imported successfully
2024-04-15 23:39:38,850:INFO:Starting cross validation
2024-04-15 23:39:38,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:39,062:WARNING:create_model() for lasso raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:39,065:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:39,065:INFO:Initializing create_model()
2024-04-15 23:39:39,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:39,066:INFO:Checking exceptions
2024-04-15 23:39:39,066:INFO:Importing libraries
2024-04-15 23:39:39,066:INFO:Copying training dataset
2024-04-15 23:39:39,080:INFO:Defining folds
2024-04-15 23:39:39,081:INFO:Declaring metric variables
2024-04-15 23:39:39,089:INFO:Importing untrained model
2024-04-15 23:39:39,096:INFO:Lasso Regression Imported successfully
2024-04-15 23:39:39,112:INFO:Starting cross validation
2024-04-15 23:39:39,114:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:39,336:ERROR:create_model() for lasso raised an exception or returned all 0.0:
2024-04-15 23:39:39,346:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:39,347:INFO:Initializing Ridge Regression
2024-04-15 23:39:39,347:INFO:Total runtime is 0.458352526028951 minutes
2024-04-15 23:39:39,356:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:39,357:INFO:Initializing create_model()
2024-04-15 23:39:39,358:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:39,358:INFO:Checking exceptions
2024-04-15 23:39:39,359:INFO:Importing libraries
2024-04-15 23:39:39,359:INFO:Copying training dataset
2024-04-15 23:39:39,387:INFO:Defining folds
2024-04-15 23:39:39,388:INFO:Declaring metric variables
2024-04-15 23:39:39,401:INFO:Importing untrained model
2024-04-15 23:39:39,412:INFO:Ridge Regression Imported successfully
2024-04-15 23:39:39,436:INFO:Starting cross validation
2024-04-15 23:39:39,439:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:39,605:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:39,607:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1167, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:39,608:INFO:Initializing create_model()
2024-04-15 23:39:39,608:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:39,608:INFO:Checking exceptions
2024-04-15 23:39:39,608:INFO:Importing libraries
2024-04-15 23:39:39,608:INFO:Copying training dataset
2024-04-15 23:39:39,626:INFO:Defining folds
2024-04-15 23:39:39,627:INFO:Declaring metric variables
2024-04-15 23:39:39,638:INFO:Importing untrained model
2024-04-15 23:39:39,652:INFO:Ridge Regression Imported successfully
2024-04-15 23:39:39,679:INFO:Starting cross validation
2024-04-15 23:39:39,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:39,902:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2024-04-15 23:39:39,908:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1167, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_ridge.py", line 1167, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:39,909:INFO:Initializing Elastic Net
2024-04-15 23:39:39,909:INFO:Total runtime is 0.46771715879440307 minutes
2024-04-15 23:39:39,917:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:39,918:INFO:Initializing create_model()
2024-04-15 23:39:39,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:39,918:INFO:Checking exceptions
2024-04-15 23:39:39,918:INFO:Importing libraries
2024-04-15 23:39:39,919:INFO:Copying training dataset
2024-04-15 23:39:39,942:INFO:Defining folds
2024-04-15 23:39:39,942:INFO:Declaring metric variables
2024-04-15 23:39:39,955:INFO:Importing untrained model
2024-04-15 23:39:39,966:INFO:Elastic Net Imported successfully
2024-04-15 23:39:39,989:INFO:Starting cross validation
2024-04-15 23:39:39,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:40,213:WARNING:create_model() for en raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:40,216:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ElasticNet does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:40,217:INFO:Initializing create_model()
2024-04-15 23:39:40,217:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:40,217:INFO:Checking exceptions
2024-04-15 23:39:40,217:INFO:Importing libraries
2024-04-15 23:39:40,217:INFO:Copying training dataset
2024-04-15 23:39:40,238:INFO:Defining folds
2024-04-15 23:39:40,239:INFO:Declaring metric variables
2024-04-15 23:39:40,248:INFO:Importing untrained model
2024-04-15 23:39:40,254:INFO:Elastic Net Imported successfully
2024-04-15 23:39:40,269:INFO:Starting cross validation
2024-04-15 23:39:40,271:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:40,478:ERROR:create_model() for en raised an exception or returned all 0.0:
2024-04-15 23:39:40,486:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ElasticNet does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_coordinate_descent.py", line 955, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ElasticNet does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:40,486:INFO:Initializing Least Angle Regression
2024-04-15 23:39:40,486:INFO:Total runtime is 0.47733543713887533 minutes
2024-04-15 23:39:40,493:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:40,493:INFO:Initializing create_model()
2024-04-15 23:39:40,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:40,494:INFO:Checking exceptions
2024-04-15 23:39:40,494:INFO:Importing libraries
2024-04-15 23:39:40,494:INFO:Copying training dataset
2024-04-15 23:39:40,508:INFO:Defining folds
2024-04-15 23:39:40,508:INFO:Declaring metric variables
2024-04-15 23:39:40,516:INFO:Importing untrained model
2024-04-15 23:39:40,523:INFO:Least Angle Regression Imported successfully
2024-04-15 23:39:40,539:INFO:Starting cross validation
2024-04-15 23:39:40,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:40,787:WARNING:create_model() for lar raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:40,791:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:40,792:INFO:Initializing create_model()
2024-04-15 23:39:40,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:40,792:INFO:Checking exceptions
2024-04-15 23:39:40,792:INFO:Importing libraries
2024-04-15 23:39:40,793:INFO:Copying training dataset
2024-04-15 23:39:40,807:INFO:Defining folds
2024-04-15 23:39:40,808:INFO:Declaring metric variables
2024-04-15 23:39:40,817:INFO:Importing untrained model
2024-04-15 23:39:40,827:INFO:Least Angle Regression Imported successfully
2024-04-15 23:39:40,841:INFO:Starting cross validation
2024-04-15 23:39:40,844:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:41,063:ERROR:create_model() for lar raised an exception or returned all 0.0:
2024-04-15 23:39:41,066:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:41,066:INFO:Initializing Lasso Least Angle Regression
2024-04-15 23:39:41,066:INFO:Total runtime is 0.48700993458429975 minutes
2024-04-15 23:39:41,074:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:41,075:INFO:Initializing create_model()
2024-04-15 23:39:41,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:41,076:INFO:Checking exceptions
2024-04-15 23:39:41,076:INFO:Importing libraries
2024-04-15 23:39:41,076:INFO:Copying training dataset
2024-04-15 23:39:41,098:INFO:Defining folds
2024-04-15 23:39:41,098:INFO:Declaring metric variables
2024-04-15 23:39:41,105:INFO:Importing untrained model
2024-04-15 23:39:41,113:INFO:Lasso Least Angle Regression Imported successfully
2024-04-15 23:39:41,133:INFO:Starting cross validation
2024-04-15 23:39:41,134:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:41,416:WARNING:create_model() for llar raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:41,418:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LassoLars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:41,419:INFO:Initializing create_model()
2024-04-15 23:39:41,419:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:41,419:INFO:Checking exceptions
2024-04-15 23:39:41,419:INFO:Importing libraries
2024-04-15 23:39:41,419:INFO:Copying training dataset
2024-04-15 23:39:41,437:INFO:Defining folds
2024-04-15 23:39:41,440:INFO:Declaring metric variables
2024-04-15 23:39:41,448:INFO:Importing untrained model
2024-04-15 23:39:41,457:INFO:Lasso Least Angle Regression Imported successfully
2024-04-15 23:39:41,471:INFO:Starting cross validation
2024-04-15 23:39:41,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:41,661:ERROR:create_model() for llar raised an exception or returned all 0.0:
2024-04-15 23:39:41,664:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LassoLars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_least_angle.py", line 1146, in fit
    X, y = self._validate_data(X, y, y_numeric=True, multi_output=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
LassoLars does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:41,665:INFO:Initializing Orthogonal Matching Pursuit
2024-04-15 23:39:41,665:INFO:Total runtime is 0.4969930728276571 minutes
2024-04-15 23:39:41,673:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:41,674:INFO:Initializing create_model()
2024-04-15 23:39:41,674:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:41,674:INFO:Checking exceptions
2024-04-15 23:39:41,674:INFO:Importing libraries
2024-04-15 23:39:41,674:INFO:Copying training dataset
2024-04-15 23:39:41,691:INFO:Defining folds
2024-04-15 23:39:41,691:INFO:Declaring metric variables
2024-04-15 23:39:41,699:INFO:Importing untrained model
2024-04-15 23:39:41,706:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-15 23:39:41,724:INFO:Starting cross validation
2024-04-15 23:39:41,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:41,908:WARNING:create_model() for omp raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:41,911:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_omp.py", line 750, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
OrthogonalMatchingPursuit does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:41,911:INFO:Initializing create_model()
2024-04-15 23:39:41,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:41,912:INFO:Checking exceptions
2024-04-15 23:39:41,912:INFO:Importing libraries
2024-04-15 23:39:41,912:INFO:Copying training dataset
2024-04-15 23:39:41,925:INFO:Defining folds
2024-04-15 23:39:41,926:INFO:Declaring metric variables
2024-04-15 23:39:41,934:INFO:Importing untrained model
2024-04-15 23:39:41,943:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-15 23:39:41,958:INFO:Starting cross validation
2024-04-15 23:39:41,960:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:42,237:ERROR:create_model() for omp raised an exception or returned all 0.0:
2024-04-15 23:39:42,250:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_omp.py", line 750, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
OrthogonalMatchingPursuit does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_omp.py", line 750, in fit
    X, y = self._validate_data(X, y, multi_output=True, y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
OrthogonalMatchingPursuit does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:42,251:INFO:Initializing Bayesian Ridge
2024-04-15 23:39:42,252:INFO:Total runtime is 0.5067651192347209 minutes
2024-04-15 23:39:42,259:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:42,259:INFO:Initializing create_model()
2024-04-15 23:39:42,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:42,261:INFO:Checking exceptions
2024-04-15 23:39:42,261:INFO:Importing libraries
2024-04-15 23:39:42,261:INFO:Copying training dataset
2024-04-15 23:39:42,277:INFO:Defining folds
2024-04-15 23:39:42,278:INFO:Declaring metric variables
2024-04-15 23:39:42,285:INFO:Importing untrained model
2024-04-15 23:39:42,297:INFO:Bayesian Ridge Imported successfully
2024-04-15 23:39:42,313:INFO:Starting cross validation
2024-04-15 23:39:42,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:42,472:WARNING:create_model() for br raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:42,475:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_bayes.py", line 296, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BayesianRidge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:42,475:INFO:Initializing create_model()
2024-04-15 23:39:42,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:42,476:INFO:Checking exceptions
2024-04-15 23:39:42,476:INFO:Importing libraries
2024-04-15 23:39:42,476:INFO:Copying training dataset
2024-04-15 23:39:42,496:INFO:Defining folds
2024-04-15 23:39:42,497:INFO:Declaring metric variables
2024-04-15 23:39:42,509:INFO:Importing untrained model
2024-04-15 23:39:42,522:INFO:Bayesian Ridge Imported successfully
2024-04-15 23:39:42,545:INFO:Starting cross validation
2024-04-15 23:39:42,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:42,760:ERROR:create_model() for br raised an exception or returned all 0.0:
2024-04-15 23:39:42,765:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_bayes.py", line 296, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BayesianRidge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_bayes.py", line 296, in fit
    X, y = self._validate_data(X, y, dtype=[np.float64, np.float32], y_numeric=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
BayesianRidge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:42,765:INFO:Initializing Passive Aggressive Regressor
2024-04-15 23:39:42,765:INFO:Total runtime is 0.5153198719024659 minutes
2024-04-15 23:39:42,771:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:42,772:INFO:Initializing create_model()
2024-04-15 23:39:42,772:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:42,772:INFO:Checking exceptions
2024-04-15 23:39:42,772:INFO:Importing libraries
2024-04-15 23:39:42,772:INFO:Copying training dataset
2024-04-15 23:39:42,785:INFO:Defining folds
2024-04-15 23:39:42,786:INFO:Declaring metric variables
2024-04-15 23:39:42,796:INFO:Importing untrained model
2024-04-15 23:39:42,805:INFO:Passive Aggressive Regressor Imported successfully
2024-04-15 23:39:42,826:INFO:Starting cross validation
2024-04-15 23:39:42,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:42,985:WARNING:create_model() for par raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:42,989:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_passive_aggressive.py", line 566, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1557, in _fit
    self._partial_fit(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1456, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
PassiveAggressiveRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:42,991:INFO:Initializing create_model()
2024-04-15 23:39:42,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:42,992:INFO:Checking exceptions
2024-04-15 23:39:42,992:INFO:Importing libraries
2024-04-15 23:39:42,992:INFO:Copying training dataset
2024-04-15 23:39:43,017:INFO:Defining folds
2024-04-15 23:39:43,019:INFO:Declaring metric variables
2024-04-15 23:39:43,034:INFO:Importing untrained model
2024-04-15 23:39:43,048:INFO:Passive Aggressive Regressor Imported successfully
2024-04-15 23:39:43,073:INFO:Starting cross validation
2024-04-15 23:39:43,075:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:43,262:ERROR:create_model() for par raised an exception or returned all 0.0:
2024-04-15 23:39:43,270:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_passive_aggressive.py", line 566, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1557, in _fit
    self._partial_fit(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1456, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
PassiveAggressiveRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_passive_aggressive.py", line 566, in fit
    return self._fit(
           ^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1557, in _fit
    self._partial_fit(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1456, in _partial_fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
PassiveAggressiveRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:43,271:INFO:Initializing Huber Regressor
2024-04-15 23:39:43,271:INFO:Total runtime is 0.5237613280614217 minutes
2024-04-15 23:39:43,283:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:43,284:INFO:Initializing create_model()
2024-04-15 23:39:43,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:43,284:INFO:Checking exceptions
2024-04-15 23:39:43,285:INFO:Importing libraries
2024-04-15 23:39:43,286:INFO:Copying training dataset
2024-04-15 23:39:43,306:INFO:Defining folds
2024-04-15 23:39:43,307:INFO:Declaring metric variables
2024-04-15 23:39:43,315:INFO:Importing untrained model
2024-04-15 23:39:43,324:INFO:Huber Regressor Imported successfully
2024-04-15 23:39:43,342:INFO:Starting cross validation
2024-04-15 23:39:43,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:43,554:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:43,558:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
HuberRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:43,558:INFO:Initializing create_model()
2024-04-15 23:39:43,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:43,561:INFO:Checking exceptions
2024-04-15 23:39:43,561:INFO:Importing libraries
2024-04-15 23:39:43,561:INFO:Copying training dataset
2024-04-15 23:39:43,582:INFO:Defining folds
2024-04-15 23:39:43,582:INFO:Declaring metric variables
2024-04-15 23:39:43,593:INFO:Importing untrained model
2024-04-15 23:39:43,605:INFO:Huber Regressor Imported successfully
2024-04-15 23:39:43,627:INFO:Starting cross validation
2024-04-15 23:39:43,630:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:43,805:ERROR:create_model() for huber raised an exception or returned all 0.0:
2024-04-15 23:39:43,809:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
HuberRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\linear_model\_huber.py", line 297, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
HuberRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:43,809:INFO:Initializing K Neighbors Regressor
2024-04-15 23:39:43,809:INFO:Total runtime is 0.532729975382487 minutes
2024-04-15 23:39:43,815:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:43,816:INFO:Initializing create_model()
2024-04-15 23:39:43,816:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:43,816:INFO:Checking exceptions
2024-04-15 23:39:43,816:INFO:Importing libraries
2024-04-15 23:39:43,816:INFO:Copying training dataset
2024-04-15 23:39:43,831:INFO:Defining folds
2024-04-15 23:39:43,831:INFO:Declaring metric variables
2024-04-15 23:39:43,840:INFO:Importing untrained model
2024-04-15 23:39:43,850:INFO:K Neighbors Regressor Imported successfully
2024-04-15 23:39:43,871:INFO:Starting cross validation
2024-04-15 23:39:43,873:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:44,068:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:44,072:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_regression.py", line 223, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_base.py", line 476, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:44,074:INFO:Initializing create_model()
2024-04-15 23:39:44,074:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:44,074:INFO:Checking exceptions
2024-04-15 23:39:44,074:INFO:Importing libraries
2024-04-15 23:39:44,074:INFO:Copying training dataset
2024-04-15 23:39:44,089:INFO:Defining folds
2024-04-15 23:39:44,089:INFO:Declaring metric variables
2024-04-15 23:39:44,097:INFO:Importing untrained model
2024-04-15 23:39:44,108:INFO:K Neighbors Regressor Imported successfully
2024-04-15 23:39:44,126:INFO:Starting cross validation
2024-04-15 23:39:44,128:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:44,278:ERROR:create_model() for knn raised an exception or returned all 0.0:
2024-04-15 23:39:44,283:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_regression.py", line 223, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_base.py", line 476, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_regression.py", line 223, in fit
    return self._fit(X, y)
           ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\neighbors\_base.py", line 476, in _fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:44,284:INFO:Initializing Decision Tree Regressor
2024-04-15 23:39:44,284:INFO:Total runtime is 0.540632700920105 minutes
2024-04-15 23:39:44,292:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:44,292:INFO:Initializing create_model()
2024-04-15 23:39:44,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:44,292:INFO:Checking exceptions
2024-04-15 23:39:44,292:INFO:Importing libraries
2024-04-15 23:39:44,292:INFO:Copying training dataset
2024-04-15 23:39:44,313:INFO:Defining folds
2024-04-15 23:39:44,313:INFO:Declaring metric variables
2024-04-15 23:39:44,331:INFO:Importing untrained model
2024-04-15 23:39:44,342:INFO:Decision Tree Regressor Imported successfully
2024-04-15 23:39:44,364:INFO:Starting cross validation
2024-04-15 23:39:44,367:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:44,587:INFO:Calculating mean and std
2024-04-15 23:39:44,592:INFO:Creating metrics dataframe
2024-04-15 23:39:44,600:INFO:Uploading results into container
2024-04-15 23:39:44,601:INFO:Uploading model into container now
2024-04-15 23:39:44,604:INFO:_master_model_container: 1
2024-04-15 23:39:44,604:INFO:_display_container: 2
2024-04-15 23:39:44,605:INFO:DecisionTreeRegressor(random_state=5948)
2024-04-15 23:39:44,606:INFO:create_model() successfully completed......................................
2024-04-15 23:39:45,561:INFO:SubProcess create_model() end ==================================
2024-04-15 23:39:45,561:INFO:Creating metrics dataframe
2024-04-15 23:39:45,591:INFO:Initializing Random Forest Regressor
2024-04-15 23:39:45,591:INFO:Total runtime is 0.5624180197715759 minutes
2024-04-15 23:39:45,601:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:45,602:INFO:Initializing create_model()
2024-04-15 23:39:45,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:45,603:INFO:Checking exceptions
2024-04-15 23:39:45,603:INFO:Importing libraries
2024-04-15 23:39:45,604:INFO:Copying training dataset
2024-04-15 23:39:45,627:INFO:Defining folds
2024-04-15 23:39:45,627:INFO:Declaring metric variables
2024-04-15 23:39:45,637:INFO:Importing untrained model
2024-04-15 23:39:45,646:INFO:Random Forest Regressor Imported successfully
2024-04-15 23:39:45,663:INFO:Starting cross validation
2024-04-15 23:39:45,664:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:47,326:INFO:Calculating mean and std
2024-04-15 23:39:47,328:INFO:Creating metrics dataframe
2024-04-15 23:39:47,333:INFO:Uploading results into container
2024-04-15 23:39:47,334:INFO:Uploading model into container now
2024-04-15 23:39:47,335:INFO:_master_model_container: 2
2024-04-15 23:39:47,335:INFO:_display_container: 2
2024-04-15 23:39:47,336:INFO:RandomForestRegressor(n_jobs=-1, random_state=5948)
2024-04-15 23:39:47,336:INFO:create_model() successfully completed......................................
2024-04-15 23:39:47,853:INFO:SubProcess create_model() end ==================================
2024-04-15 23:39:47,853:INFO:Creating metrics dataframe
2024-04-15 23:39:47,895:INFO:Initializing Extra Trees Regressor
2024-04-15 23:39:47,895:INFO:Total runtime is 0.6008213599522908 minutes
2024-04-15 23:39:47,902:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:47,903:INFO:Initializing create_model()
2024-04-15 23:39:47,903:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:47,903:INFO:Checking exceptions
2024-04-15 23:39:47,903:INFO:Importing libraries
2024-04-15 23:39:47,903:INFO:Copying training dataset
2024-04-15 23:39:47,929:INFO:Defining folds
2024-04-15 23:39:47,929:INFO:Declaring metric variables
2024-04-15 23:39:47,938:INFO:Importing untrained model
2024-04-15 23:39:47,946:INFO:Extra Trees Regressor Imported successfully
2024-04-15 23:39:47,965:INFO:Starting cross validation
2024-04-15 23:39:47,967:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:48,178:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:48,183:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\tree\_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 216, in assert_all_finite
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:48,184:INFO:Initializing create_model()
2024-04-15 23:39:48,185:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:48,185:INFO:Checking exceptions
2024-04-15 23:39:48,185:INFO:Importing libraries
2024-04-15 23:39:48,185:INFO:Copying training dataset
2024-04-15 23:39:48,211:INFO:Defining folds
2024-04-15 23:39:48,211:INFO:Declaring metric variables
2024-04-15 23:39:48,220:INFO:Importing untrained model
2024-04-15 23:39:48,234:INFO:Extra Trees Regressor Imported successfully
2024-04-15 23:39:48,254:INFO:Starting cross validation
2024-04-15 23:39:48,257:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:48,465:ERROR:create_model() for et raised an exception or returned all 0.0:
2024-04-15 23:39:48,470:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\tree\_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 216, in assert_all_finite
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_forest.py", line 377, in fit
    estimator._compute_missing_values_in_feature_mask(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\tree\_classes.py", line 214, in _compute_missing_values_in_feature_mask
    assert_all_finite(X, **common_kwargs)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 216, in assert_all_finite
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
ExtraTreesRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:48,471:INFO:Initializing AdaBoost Regressor
2024-04-15 23:39:48,471:INFO:Total runtime is 0.6104154944419861 minutes
2024-04-15 23:39:48,477:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:48,477:INFO:Initializing create_model()
2024-04-15 23:39:48,477:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:48,479:INFO:Checking exceptions
2024-04-15 23:39:48,479:INFO:Importing libraries
2024-04-15 23:39:48,479:INFO:Copying training dataset
2024-04-15 23:39:48,490:INFO:Defining folds
2024-04-15 23:39:48,490:INFO:Declaring metric variables
2024-04-15 23:39:48,499:INFO:Importing untrained model
2024-04-15 23:39:48,506:INFO:AdaBoost Regressor Imported successfully
2024-04-15 23:39:48,520:INFO:Starting cross validation
2024-04-15 23:39:48,523:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:48,736:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:48,739:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:48,741:INFO:Initializing create_model()
2024-04-15 23:39:48,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:48,741:INFO:Checking exceptions
2024-04-15 23:39:48,741:INFO:Importing libraries
2024-04-15 23:39:48,742:INFO:Copying training dataset
2024-04-15 23:39:48,768:INFO:Defining folds
2024-04-15 23:39:48,769:INFO:Declaring metric variables
2024-04-15 23:39:48,777:INFO:Importing untrained model
2024-04-15 23:39:48,787:INFO:AdaBoost Regressor Imported successfully
2024-04-15 23:39:48,809:INFO:Starting cross validation
2024-04-15 23:39:48,811:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:49,014:ERROR:create_model() for ada raised an exception or returned all 0.0:
2024-04-15 23:39:49,021:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_weight_boosting.py", line 133, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
AdaBoostRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:49,021:INFO:Initializing Gradient Boosting Regressor
2024-04-15 23:39:49,021:INFO:Total runtime is 0.6195976773897807 minutes
2024-04-15 23:39:49,028:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:49,029:INFO:Initializing create_model()
2024-04-15 23:39:49,030:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:49,030:INFO:Checking exceptions
2024-04-15 23:39:49,030:INFO:Importing libraries
2024-04-15 23:39:49,030:INFO:Copying training dataset
2024-04-15 23:39:49,047:INFO:Defining folds
2024-04-15 23:39:49,048:INFO:Declaring metric variables
2024-04-15 23:39:49,054:INFO:Importing untrained model
2024-04-15 23:39:49,065:INFO:Gradient Boosting Regressor Imported successfully
2024-04-15 23:39:49,088:INFO:Starting cross validation
2024-04-15 23:39:49,091:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:49,280:WARNING:create_model() for gbr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-15 23:39:49,283:WARNING:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:49,283:INFO:Initializing create_model()
2024-04-15 23:39:49,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:49,283:INFO:Checking exceptions
2024-04-15 23:39:49,283:INFO:Importing libraries
2024-04-15 23:39:49,284:INFO:Copying training dataset
2024-04-15 23:39:49,296:INFO:Defining folds
2024-04-15 23:39:49,296:INFO:Declaring metric variables
2024-04-15 23:39:49,306:INFO:Importing untrained model
2024-04-15 23:39:49,317:INFO:Gradient Boosting Regressor Imported successfully
2024-04-15 23:39:49,336:INFO:Starting cross validation
2024-04-15 23:39:49,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:49,561:ERROR:create_model() for gbr raised an exception or returned all 0.0:
2024-04-15 23:39:49,566:ERROR:Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
             ^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 276, in fit
    fitted_estimator = self._memory_fit(
                       ^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\ensemble\_gb.py", line 659, in fit
    X, y = self._validate_data(
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
        ^^^^^^^^^^^^
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 1049, in check_array
    _assert_all_finite(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 126, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "C:\Users\Thabang Ndhlovu\conda\Lib\site-packages\sklearn\utils\validation.py", line 175, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values


2024-04-15 23:39:49,566:INFO:Initializing Extreme Gradient Boosting
2024-04-15 23:39:49,567:INFO:Total runtime is 0.6286905328432719 minutes
2024-04-15 23:39:49,575:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:49,577:INFO:Initializing create_model()
2024-04-15 23:39:49,577:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:49,577:INFO:Checking exceptions
2024-04-15 23:39:49,578:INFO:Importing libraries
2024-04-15 23:39:49,578:INFO:Copying training dataset
2024-04-15 23:39:49,596:INFO:Defining folds
2024-04-15 23:39:49,597:INFO:Declaring metric variables
2024-04-15 23:39:49,606:INFO:Importing untrained model
2024-04-15 23:39:49,616:INFO:Extreme Gradient Boosting Imported successfully
2024-04-15 23:39:49,633:INFO:Starting cross validation
2024-04-15 23:39:49,635:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:50,202:INFO:Calculating mean and std
2024-04-15 23:39:50,204:INFO:Creating metrics dataframe
2024-04-15 23:39:50,209:INFO:Uploading results into container
2024-04-15 23:39:50,209:INFO:Uploading model into container now
2024-04-15 23:39:50,211:INFO:_master_model_container: 3
2024-04-15 23:39:50,211:INFO:_display_container: 2
2024-04-15 23:39:50,213:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, device='cpu', early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             multi_strategy=None, n_estimators=None, n_jobs=-1,
             num_parallel_tree=None, random_state=5948, ...)
2024-04-15 23:39:50,214:INFO:create_model() successfully completed......................................
2024-04-15 23:39:50,739:INFO:SubProcess create_model() end ==================================
2024-04-15 23:39:50,739:INFO:Creating metrics dataframe
2024-04-15 23:39:50,751:INFO:Initializing Light Gradient Boosting Machine
2024-04-15 23:39:50,751:INFO:Total runtime is 0.6484307726224264 minutes
2024-04-15 23:39:50,759:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:50,760:INFO:Initializing create_model()
2024-04-15 23:39:50,761:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:50,761:INFO:Checking exceptions
2024-04-15 23:39:50,761:INFO:Importing libraries
2024-04-15 23:39:50,761:INFO:Copying training dataset
2024-04-15 23:39:50,778:INFO:Defining folds
2024-04-15 23:39:50,779:INFO:Declaring metric variables
2024-04-15 23:39:50,788:INFO:Importing untrained model
2024-04-15 23:39:50,797:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-15 23:39:50,817:INFO:Starting cross validation
2024-04-15 23:39:50,819:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:39:51,169:INFO:Calculating mean and std
2024-04-15 23:39:51,174:INFO:Creating metrics dataframe
2024-04-15 23:39:51,181:INFO:Uploading results into container
2024-04-15 23:39:51,183:INFO:Uploading model into container now
2024-04-15 23:39:51,183:INFO:_master_model_container: 4
2024-04-15 23:39:51,185:INFO:_display_container: 2
2024-04-15 23:39:51,186:INFO:LGBMRegressor(n_jobs=-1, random_state=5948)
2024-04-15 23:39:51,187:INFO:create_model() successfully completed......................................
2024-04-15 23:39:51,712:INFO:SubProcess create_model() end ==================================
2024-04-15 23:39:51,713:INFO:Creating metrics dataframe
2024-04-15 23:39:51,731:INFO:Initializing CatBoost Regressor
2024-04-15 23:39:51,732:INFO:Total runtime is 0.6647650281588238 minutes
2024-04-15 23:39:51,744:INFO:SubProcess create_model() called ==================================
2024-04-15 23:39:51,745:INFO:Initializing create_model()
2024-04-15 23:39:51,746:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=catboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:39:51,746:INFO:Checking exceptions
2024-04-15 23:39:51,746:INFO:Importing libraries
2024-04-15 23:39:51,746:INFO:Copying training dataset
2024-04-15 23:39:51,763:INFO:Defining folds
2024-04-15 23:39:51,764:INFO:Declaring metric variables
2024-04-15 23:39:51,773:INFO:Importing untrained model
2024-04-15 23:39:51,805:INFO:CatBoost Regressor Imported successfully
2024-04-15 23:39:51,821:INFO:Starting cross validation
2024-04-15 23:39:51,822:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:40:12,234:INFO:Calculating mean and std
2024-04-15 23:40:12,240:INFO:Creating metrics dataframe
2024-04-15 23:40:12,248:INFO:Uploading results into container
2024-04-15 23:40:12,249:INFO:Uploading model into container now
2024-04-15 23:40:12,251:INFO:_master_model_container: 5
2024-04-15 23:40:12,252:INFO:_display_container: 2
2024-04-15 23:40:12,253:INFO:<catboost.core.CatBoostRegressor object at 0x00000128398BA5D0>
2024-04-15 23:40:12,254:INFO:create_model() successfully completed......................................
2024-04-15 23:40:12,809:INFO:SubProcess create_model() end ==================================
2024-04-15 23:40:12,809:INFO:Creating metrics dataframe
2024-04-15 23:40:12,833:INFO:Initializing Dummy Regressor
2024-04-15 23:40:12,833:INFO:Total runtime is 1.0164484341939293 minutes
2024-04-15 23:40:12,841:INFO:SubProcess create_model() called ==================================
2024-04-15 23:40:12,842:INFO:Initializing create_model()
2024-04-15 23:40:12,842:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001283AD1FBD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:40:12,843:INFO:Checking exceptions
2024-04-15 23:40:12,843:INFO:Importing libraries
2024-04-15 23:40:12,843:INFO:Copying training dataset
2024-04-15 23:40:12,865:INFO:Defining folds
2024-04-15 23:40:13,133:INFO:Declaring metric variables
2024-04-15 23:40:13,141:INFO:Importing untrained model
2024-04-15 23:40:13,153:INFO:Dummy Regressor Imported successfully
2024-04-15 23:40:13,176:INFO:Starting cross validation
2024-04-15 23:40:13,178:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:40:13,328:INFO:Calculating mean and std
2024-04-15 23:40:13,329:INFO:Creating metrics dataframe
2024-04-15 23:40:13,333:INFO:Uploading results into container
2024-04-15 23:40:13,334:INFO:Uploading model into container now
2024-04-15 23:40:13,335:INFO:_master_model_container: 6
2024-04-15 23:40:13,335:INFO:_display_container: 2
2024-04-15 23:40:13,336:INFO:DummyRegressor()
2024-04-15 23:40:13,336:INFO:create_model() successfully completed......................................
2024-04-15 23:40:13,762:INFO:SubProcess create_model() end ==================================
2024-04-15 23:40:13,762:INFO:Creating metrics dataframe
2024-04-15 23:40:13,808:INFO:Initializing create_model()
2024-04-15 23:40:13,809:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=DecisionTreeRegressor(random_state=5948), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:40:13,809:INFO:Checking exceptions
2024-04-15 23:40:13,813:INFO:Importing libraries
2024-04-15 23:40:13,813:INFO:Copying training dataset
2024-04-15 23:40:13,828:INFO:Defining folds
2024-04-15 23:40:13,829:INFO:Declaring metric variables
2024-04-15 23:40:13,829:INFO:Importing untrained model
2024-04-15 23:40:13,829:INFO:Declaring custom model
2024-04-15 23:40:13,831:INFO:Decision Tree Regressor Imported successfully
2024-04-15 23:40:13,832:INFO:Cross validation set to False
2024-04-15 23:40:13,833:INFO:Fitting Model
2024-04-15 23:40:13,956:INFO:DecisionTreeRegressor(random_state=5948)
2024-04-15 23:40:13,956:INFO:create_model() successfully completed......................................
2024-04-15 23:40:14,463:INFO:_master_model_container: 6
2024-04-15 23:40:14,463:INFO:_display_container: 2
2024-04-15 23:40:14,465:INFO:DecisionTreeRegressor(random_state=5948)
2024-04-15 23:40:14,465:INFO:compare_models() successfully completed......................................
2024-04-15 23:41:57,079:INFO:Initializing tune_model()
2024-04-15 23:41:57,079:INFO:tune_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=DecisionTreeRegressor(random_state=5948), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-04-15 23:41:57,080:INFO:Checking exceptions
2024-04-15 23:41:57,131:INFO:Copying training dataset
2024-04-15 23:41:57,146:INFO:Checking base model
2024-04-15 23:41:57,146:INFO:Base model : Decision Tree Regressor
2024-04-15 23:41:57,159:INFO:Declaring metric variables
2024-04-15 23:41:57,169:INFO:Defining Hyperparameters
2024-04-15 23:41:57,606:INFO:Tuning with n_jobs=-1
2024-04-15 23:41:57,607:INFO:Initializing RandomizedSearchCV
2024-04-15 23:41:58,200:INFO:best_params: {'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.3, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 16, 'actual_estimator__criterion': 'friedman_mse'}
2024-04-15 23:41:58,201:INFO:Hyperparameter search completed
2024-04-15 23:41:58,201:INFO:SubProcess create_model() called ==================================
2024-04-15 23:41:58,202:INFO:Initializing create_model()
2024-04-15 23:41:58,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=DecisionTreeRegressor(random_state=5948), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001287C6F6D50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.3, 'max_features': 1.0, 'max_depth': 16, 'criterion': 'friedman_mse'})
2024-04-15 23:41:58,203:INFO:Checking exceptions
2024-04-15 23:41:58,204:INFO:Importing libraries
2024-04-15 23:41:58,204:INFO:Copying training dataset
2024-04-15 23:41:58,217:INFO:Defining folds
2024-04-15 23:41:58,217:INFO:Declaring metric variables
2024-04-15 23:41:58,223:INFO:Importing untrained model
2024-04-15 23:41:58,223:INFO:Declaring custom model
2024-04-15 23:41:58,230:INFO:Decision Tree Regressor Imported successfully
2024-04-15 23:41:58,242:INFO:Starting cross validation
2024-04-15 23:41:58,246:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:41:58,437:INFO:Calculating mean and std
2024-04-15 23:41:58,439:INFO:Creating metrics dataframe
2024-04-15 23:41:58,447:INFO:Finalizing model
2024-04-15 23:41:58,461:INFO:Uploading results into container
2024-04-15 23:41:58,463:INFO:Uploading model into container now
2024-04-15 23:41:58,464:INFO:_master_model_container: 7
2024-04-15 23:41:58,464:INFO:_display_container: 3
2024-04-15 23:41:58,465:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=16, max_features=1.0,
                      min_impurity_decrease=0.3, min_samples_leaf=2,
                      random_state=5948)
2024-04-15 23:41:58,465:INFO:create_model() successfully completed......................................
2024-04-15 23:41:58,925:INFO:SubProcess create_model() end ==================================
2024-04-15 23:41:58,925:INFO:choose_better activated
2024-04-15 23:41:58,931:INFO:SubProcess create_model() called ==================================
2024-04-15 23:41:58,933:INFO:Initializing create_model()
2024-04-15 23:41:58,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000128783DD790>, estimator=DecisionTreeRegressor(random_state=5948), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-15 23:41:58,933:INFO:Checking exceptions
2024-04-15 23:41:58,937:INFO:Importing libraries
2024-04-15 23:41:58,938:INFO:Copying training dataset
2024-04-15 23:41:58,952:INFO:Defining folds
2024-04-15 23:41:58,952:INFO:Declaring metric variables
2024-04-15 23:41:58,953:INFO:Importing untrained model
2024-04-15 23:41:58,953:INFO:Declaring custom model
2024-04-15 23:41:58,954:INFO:Decision Tree Regressor Imported successfully
2024-04-15 23:41:58,955:INFO:Starting cross validation
2024-04-15 23:41:58,956:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-15 23:41:59,101:INFO:Calculating mean and std
2024-04-15 23:41:59,102:INFO:Creating metrics dataframe
2024-04-15 23:41:59,104:INFO:Finalizing model
2024-04-15 23:41:59,111:INFO:Uploading results into container
2024-04-15 23:41:59,112:INFO:Uploading model into container now
2024-04-15 23:41:59,112:INFO:_master_model_container: 8
2024-04-15 23:41:59,113:INFO:_display_container: 4
2024-04-15 23:41:59,113:INFO:DecisionTreeRegressor(random_state=5948)
2024-04-15 23:41:59,113:INFO:create_model() successfully completed......................................
2024-04-15 23:41:59,557:INFO:SubProcess create_model() end ==================================
2024-04-15 23:41:59,558:INFO:DecisionTreeRegressor(random_state=5948) result for R2 is 0.0857
2024-04-15 23:41:59,559:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=16, max_features=1.0,
                      min_impurity_decrease=0.3, min_samples_leaf=2,
                      random_state=5948) result for R2 is 0.1918
2024-04-15 23:41:59,559:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=16, max_features=1.0,
                      min_impurity_decrease=0.3, min_samples_leaf=2,
                      random_state=5948) is best model
2024-04-15 23:41:59,560:INFO:choose_better completed
2024-04-15 23:41:59,575:INFO:_master_model_container: 8
2024-04-15 23:41:59,576:INFO:_display_container: 3
2024-04-15 23:41:59,577:INFO:DecisionTreeRegressor(criterion='friedman_mse', max_depth=16, max_features=1.0,
                      min_impurity_decrease=0.3, min_samples_leaf=2,
                      random_state=5948)
2024-04-15 23:41:59,578:INFO:tune_model() successfully completed......................................
